openapi: 3.0.3
info:
  title: Rate Api
  description: Handle the info about rates in platform
  version: "1.0"
tags:
- name: rate
  description: Available operations for rate domain.
paths:
  /v1/rate/{id}:
    get:
      tags:
      - rate
      summary: Get a specific rate
      description: Get the rate by the id rate
      operationId: findRateById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateDto'
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: Rate not found
          content: {}
    put:
      tags:
      - rate
      summary: Updated price rate
      description: Update the price rate given a id rate
      operationId: updateRateById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      requestBody:
        description: Updated Rate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateDto'
        required: true
      responses:
        200:
          description: Rate successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateDto'
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: Rate not found
          content: {}
      x-codegen-request-body-name: body
    delete:
      tags:
      - rate
      summary: Delete a rate
      description: Delete a rate given a id rate
      operationId: deleteById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      responses:
        204:
          description: Succesful Operation
          content: {}
        400:
          description: Invalid id supplied
          content: {}
        404:
          description: Rate not found
          content: {}
  /v1/rate:
    get:
      tags:
      - rate
      summary: Find a Rate given product, brand and start date
      description: Find a Rate by a start date, product's id and brand's id
      operationId: findRateByProductAndBrand
      parameters:
      - in: query
        name: startDate
        description: The rate creation timestamp
        required: true
        schema:
          type: string
          format: date-time
          example: "2022-02-21T17:32:28Z"
      - in: query
        name: brandId
        description: Brand Id
        required: true
        schema:
          type: string
      - in: query
        name: productId
        description: Product Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateDto'
        400:
          description: Invalid id brand or product
          content: {}
        404:
          description: Rate not found
          content: {}
        422:
          description: Invalid date format
          content: {}
    post:
      tags:
      - rate
      summary: Create a new rate
      operationId: addRate
      requestBody:
        description: Use the required fields to create a new rate.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateDto'
        required: true
      responses:
        201:
          description: Use the required fields to create a new rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateDto'
        422:
          description: Invalid price or currency code format
          content: {}
        503:
          description: Service unavailable
          content: {}
components:
  schemas:
    RateDto:
      type: object
      properties:
        id:
          type: string
          example: "1234"
        brandId:
          type: string
          description: Unique brand identifier
          example: "1234"
        productId:
          type: string
          description: Unique product identifier
          example: "1234"
        startDate:
          type: string
          description: Rate service start date in YYYY-mm-dd format
          format: date
          example: "2021-05-24"
        endDate:
          type: string
          description: Rate service end date in YYYY-mm-dd format
          format: date
          example: "2021-12-24"
        price:
          type: integer
          description: Product price without decimals
          example: 324
        currencyCode:
          type: string
          description: ID of the currency in which the price is represented
          example: EUR
      required:
      - id
      - brandId
      - productId
      - startDate
      - price
      - currencyCode